🎯Linked Lists

👉A Linked list is a chain of sequentially connected nodes wherein the first node is pointed by
  the head pointer and the last node is pointed to NULL and every node consist of two parts one is
  the data part and another is pointer part and the linking to one node to another node is done by
  the pointer part which points to the next node.

👉Important Points:
   1️⃣Nodes may not be in continues memory location
   2️⃣LL can be used to store the data in the form of objects as well as primitive data type.
   3️⃣Size of the LL is limited to the total memory available on the system.

⚔️Linked list vs Arrays
   👉Size can be expanded and contracted on the go.
   👉Size of an array cannot be changed post declaration, but size of LL can change.
   👉Arrays can only store same value data.
   👉Inserting and deleting the elements in array is slower than LL.
   👉Elements in array is accessed using indexing, in LL you have to traverse from the head node.
   👉LL requires additional memory location for storing pointers.

👉Types of LL:
   1️⃣Singly LL: A singly linked list is a fundamental data structure, it consists of nodes where each node
                contains a data field and a reference to the next node in the linked list.The next of the last
                node is null, indicating the end of the list.
   2️⃣
   3️⃣
